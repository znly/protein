// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/znly/protein/protobuf/protobuf_schema.proto

package protein

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
import _ "github.com/gogo/protobuf/gogoproto"

import strings "strings"
import reflect "reflect"
import github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ProtobufSchema is a versioned protobuf Message or Enum descriptor that can
// be used to decode `ProtobufPayload`s at runtime.
//
// See `ScanSchemas`'s documentation for more information.
type ProtobufSchema struct {
	// SchemaUID is the unique, deterministic & versioned identifier of this
	// schema.
	SchemaUID string `protobuf:"bytes,1,opt,name=schema_uid,json=schemaUid,proto3" json:"schema_uid,omitempty"`
	// FQName is the fully-qualified name of this schema,
	// e.g. `.google.protobuf.Timestamp`.
	FQName string `protobuf:"bytes,2,opt,name=fq_name,json=fqName,proto3" json:"fq_name,omitempty"`
	// Descriptor is either a Message or an Enum protobuf descriptor.
	//
	// Types that are valid to be assigned to Descr:
	//	*ProtobufSchema_Message
	//	*ProtobufSchema_Enum
	Descr isProtobufSchema_Descr `protobuf_oneof:"descr"`
	// Deps contains every direct and indirect dependencies that this schema
	// relies on.
	//
	// Key: the dependency's `schemaUID`
	// Value: the dependency's fully-qualified name
	Deps map[string]string `protobuf:"bytes,4,rep,name=deps" json:"deps" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *ProtobufSchema) Reset()                    { *m = ProtobufSchema{} }
func (m *ProtobufSchema) String() string            { return proto.CompactTextString(m) }
func (*ProtobufSchema) ProtoMessage()               {}
func (*ProtobufSchema) Descriptor() ([]byte, []int) { return fileDescriptorProtobufSchema, []int{0} }

type isProtobufSchema_Descr interface {
	isProtobufSchema_Descr()
}

type ProtobufSchema_Message struct {
	Message *google_protobuf.DescriptorProto `protobuf:"bytes,30,opt,name=msg,oneof"`
}
type ProtobufSchema_Enum struct {
	Enum *google_protobuf.EnumDescriptorProto `protobuf:"bytes,31,opt,name=enm,oneof"`
}

func (*ProtobufSchema_Message) isProtobufSchema_Descr() {}
func (*ProtobufSchema_Enum) isProtobufSchema_Descr()    {}

func (m *ProtobufSchema) GetDescr() isProtobufSchema_Descr {
	if m != nil {
		return m.Descr
	}
	return nil
}

func (m *ProtobufSchema) GetSchemaUID() string {
	if m != nil {
		return m.SchemaUID
	}
	return ""
}

func (m *ProtobufSchema) GetFQName() string {
	if m != nil {
		return m.FQName
	}
	return ""
}

func (m *ProtobufSchema) GetMessage() *google_protobuf.DescriptorProto {
	if x, ok := m.GetDescr().(*ProtobufSchema_Message); ok {
		return x.Message
	}
	return nil
}

func (m *ProtobufSchema) GetEnum() *google_protobuf.EnumDescriptorProto {
	if x, ok := m.GetDescr().(*ProtobufSchema_Enum); ok {
		return x.Enum
	}
	return nil
}

func (m *ProtobufSchema) GetDeps() map[string]string {
	if m != nil {
		return m.Deps
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ProtobufSchema) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ProtobufSchema_OneofMarshaler, _ProtobufSchema_OneofUnmarshaler, _ProtobufSchema_OneofSizer, []interface{}{
		(*ProtobufSchema_Message)(nil),
		(*ProtobufSchema_Enum)(nil),
	}
}

func _ProtobufSchema_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ProtobufSchema)
	// descr
	switch x := m.Descr.(type) {
	case *ProtobufSchema_Message:
		_ = b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Message); err != nil {
			return err
		}
	case *ProtobufSchema_Enum:
		_ = b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Enum); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ProtobufSchema.Descr has unexpected type %T", x)
	}
	return nil
}

func _ProtobufSchema_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ProtobufSchema)
	switch tag {
	case 30: // descr.msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.DescriptorProto)
		err := b.DecodeMessage(msg)
		m.Descr = &ProtobufSchema_Message{msg}
		return true, err
	case 31: // descr.enm
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(google_protobuf.EnumDescriptorProto)
		err := b.DecodeMessage(msg)
		m.Descr = &ProtobufSchema_Enum{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ProtobufSchema_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ProtobufSchema)
	// descr
	switch x := m.Descr.(type) {
	case *ProtobufSchema_Message:
		s := proto.Size(x.Message)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ProtobufSchema_Enum:
		s := proto.Size(x.Enum)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ProtobufSchema)(nil), "protein.ProtobufSchema")
}
func (this *ProtobufSchema) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 9)
	s = append(s, "&protein.ProtobufSchema{")
	s = append(s, "SchemaUID: "+fmt.Sprintf("%#v", this.SchemaUID)+",\n")
	s = append(s, "FQName: "+fmt.Sprintf("%#v", this.FQName)+",\n")
	if this.Descr != nil {
		s = append(s, "Descr: "+fmt.Sprintf("%#v", this.Descr)+",\n")
	}
	keysForDeps := make([]string, 0, len(this.Deps))
	for k, _ := range this.Deps {
		keysForDeps = append(keysForDeps, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForDeps)
	mapStringForDeps := "map[string]string{"
	for _, k := range keysForDeps {
		mapStringForDeps += fmt.Sprintf("%#v: %#v,", k, this.Deps[k])
	}
	mapStringForDeps += "}"
	if this.Deps != nil {
		s = append(s, "Deps: "+mapStringForDeps+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ProtobufSchema_Message) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&protein.ProtobufSchema_Message{` +
		`Message:` + fmt.Sprintf("%#v", this.Message) + `}`}, ", ")
	return s
}
func (this *ProtobufSchema_Enum) GoString() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&protein.ProtobufSchema_Enum{` +
		`Enum:` + fmt.Sprintf("%#v", this.Enum) + `}`}, ", ")
	return s
}
func valueToGoStringProtobufSchema(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}

func init() {
	proto.RegisterFile("github.com/znly/protein/protobuf/protobuf_schema.proto", fileDescriptorProtobufSchema)
}

var fileDescriptorProtobufSchema = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x51, 0x3d, 0xaf, 0xd3, 0x30,
	0x14, 0x75, 0x9a, 0xb4, 0x21, 0xae, 0x40, 0xc8, 0x62, 0x88, 0x2a, 0xe1, 0x84, 0x8f, 0xa1, 0x03,
	0x72, 0x51, 0x91, 0x00, 0xc1, 0x44, 0xd4, 0x22, 0x18, 0x40, 0x10, 0xd4, 0xb9, 0x4a, 0x1b, 0x37,
	0x8d, 0xa8, 0xe3, 0x34, 0x1f, 0x48, 0x65, 0xea, 0xc8, 0xc8, 0x4f, 0xe0, 0x27, 0xf0, 0x33, 0x3a,
	0x32, 0x32, 0x45, 0xe0, 0x4c, 0x6c, 0x8c, 0x8c, 0x28, 0x76, 0x5e, 0x9e, 0xde, 0x7b, 0xd3, 0xbd,
	0x57, 0xe7, 0xdc, 0x73, 0x8f, 0x8f, 0xe1, 0xe3, 0x28, 0x2e, 0xb6, 0xe5, 0x8a, 0xac, 0x39, 0x9b,
	0x7c, 0x4e, 0x76, 0x87, 0x49, 0x9a, 0xf1, 0x82, 0xc6, 0x89, 0xac, 0x7c, 0x55, 0x6e, 0xba, 0x66,
	0x99, 0xaf, 0xb7, 0x94, 0x05, 0x44, 0xce, 0xc8, 0x6c, 0x79, 0x23, 0x37, 0xe2, 0x3c, 0xda, 0xd1,
	0x73, 0x7e, 0x48, 0xf3, 0x75, 0x16, 0xa7, 0x05, 0xcf, 0x14, 0x75, 0x74, 0xbb, 0x83, 0x22, 0x1e,
	0x71, 0x39, 0xc8, 0x4e, 0xc1, 0x77, 0xff, 0xf4, 0xe0, 0x8d, 0x77, 0x2d, 0xe3, 0x83, 0x3c, 0x81,
	0x1e, 0x40, 0xa8, 0x8e, 0x2d, 0xcb, 0x38, 0xb4, 0x35, 0x57, 0x1b, 0x5b, 0xde, 0x75, 0x51, 0x39,
	0x96, 0xc2, 0x17, 0xaf, 0x67, 0xbe, 0xa5, 0x08, 0x8b, 0x38, 0x44, 0xf7, 0xa0, 0xb9, 0xd9, 0x2f,
	0x93, 0x80, 0x51, 0xbb, 0x27, 0xa9, 0x50, 0x54, 0xce, 0xe0, 0xe5, 0xfb, 0xb7, 0x01, 0xa3, 0xfe,
	0x60, 0xb3, 0x6f, 0x2a, 0x7a, 0x01, 0x75, 0x96, 0x47, 0x36, 0x76, 0xb5, 0xf1, 0x70, 0xea, 0x12,
	0x65, 0x9a, 0x9c, 0x39, 0x23, 0xb3, 0xce, 0xb4, 0xb4, 0xe2, 0x0d, 0x45, 0xe5, 0x98, 0x6f, 0x68,
	0x9e, 0x07, 0x11, 0x7d, 0x05, 0xfc, 0x66, 0x17, 0x79, 0x50, 0xa7, 0x09, 0xb3, 0x1d, 0x29, 0x71,
	0xff, 0x8a, 0xc4, 0x3c, 0x29, 0xd9, 0x65, 0x99, 0x6b, 0xa2, 0x72, 0x8c, 0x06, 0x68, 0x34, 0x68,
	0xc2, 0xd0, 0x73, 0x68, 0x84, 0x34, 0xcd, 0x6d, 0xc3, 0xd5, 0xc7, 0xc3, 0xe9, 0x1d, 0xd2, 0xa6,
	0x48, 0x2e, 0x06, 0x40, 0x66, 0x34, 0xcd, 0xe7, 0x49, 0x91, 0x1d, 0x3c, 0xe3, 0x54, 0x39, 0xc0,
	0x97, 0x4b, 0xa3, 0x27, 0xd0, 0xea, 0x00, 0x74, 0x13, 0xea, 0x1f, 0xe9, 0x41, 0x85, 0xe3, 0x37,
	0x2d, 0xba, 0x05, 0xfb, 0x9f, 0x82, 0x5d, 0xd9, 0xa6, 0xe0, 0xab, 0xe1, 0x59, 0xef, 0xa9, 0xe6,
	0x99, 0xb0, 0x2f, 0x7f, 0xc5, 0x7b, 0xf8, 0xf7, 0x37, 0xd6, 0x8e, 0x02, 0x83, 0x2f, 0x02, 0x83,
	0x93, 0xc0, 0xe0, 0x87, 0xc0, 0xe0, 0xa7, 0xc0, 0xe0, 0x97, 0xc0, 0xe0, 0x9f, 0xc0, 0xe0, 0x58,
	0x63, 0xf0, 0xb5, 0xc6, 0xe0, 0x5b, 0x8d, 0xc1, 0xf7, 0x1a, 0x6b, 0xab, 0x81, 0x7c, 0xdf, 0xa3,
	0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x57, 0x11, 0xbe, 0x70, 0x28, 0x02, 0x00, 0x00,
}
